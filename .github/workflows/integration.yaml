name: Integration
on:
  push:
  schedule:
    - cron: "*/15 * * * *"

jobs:
  integration:
    name: Integration
    runs-on: ubuntu-latest

    env:
      BUILDEVENT_APIKEY: ${{ secrets.BUILDEVENT_APIKEY }}
      BUILDEVENT_DATASET: "tfe-run_integration"
      BUILDEVENT_CIPROVIDER: "github-actions"

    steps:
      - name: Record build start
        run: |
          echo ::set-env name=BUILD_START::$(date +%s)

          # Note: github.run_number does not change when re-run, this might cause issues when re-running workflows
          echo ::set-env name=BUILD_ID::${{ github.run_number }}

      - uses: actions/checkout@v2

      - name: Set up buildevents file
        run: |
          echo github_workflow=${{ github.workflow }} >> ../buildevents.txt
          echo github_run_number=${{ github.run_number }} >> ../buildevents.txt
          echo github_event_name=${{ github.event_name }} >> ../buildevents.txt
          echo github_sha=${{ github.sha }} >> ../buildevents.txt
          echo github_ref=${{ github.ref }} >> ../buildbuildevents.txt

          echo ::set-env name=BUILDEVENT_FILE::../buildevents.txt

          cat ../buildevents.txt

      - name: Install Honeycomb's buildevents tool
        run: |
          sudo curl -L -o /usr/local/bin/buildevents https://github.com/honeycombio/buildevents/releases/latest/download/buildevents-linux-amd64
          sudo chmod 755 /usr/local/bin/buildevents

      - name: Start step 'speculative-plan'
        run: |
          echo ::set-env name=STEP_ID::0
          echo ::set-env name=STEP_START::$(date +%s)
          echo ::set-env name=STEP_NAME::speculative-plan

      - uses: kvrhdn/tfe-run@master
        with:
          token: ${{ secrets.TFE_TOKEN }}
          workspace: tfe-run_integration
          speculative: true
          tf-vars: |
            run_number = ${{ github.run_number }}
        id: plan

      - name: Assert speculative plan has changes
        if: steps.plan.outputs.has-changes == 'false'
        run: |
          echo "Expected speculative plan to have changes, but had not"
          exit 1

      - name: Wrap up step
        run: |
          buildevents step $BUILD_ID $STEP_ID $STEP_START $STEP_NAME

      - name: Start step 'apply'
        run: |
          echo ::set-env name=STEP_ID::1
          echo ::set-env name=STEP_START::$(date +%s)
          echo ::set-env name=STEP_NAME::apply

      - uses: kvrhdn/tfe-run@master
        with:
          token: ${{ secrets.TFE_TOKEN }}
          workspace: tfe-run_integration
          message: "Integration run ${{ github.run_number }}"
          tf-vars: |
            run_number = ${{ github.run_number }}
        id: apply

      - name: Assert run number is published to S3
        env:
          RUN_NUMBER: ${{ github.run_number }}
          S3_URL: ${{ steps.apply.outputs.tf-endpoint }}
        run: |
          EXPECTED="GitHub Actions run number: $RUN_NUMBER"
          ACTUAL=$(curl $S3_URL)

          if [ "$EXPECTED" != "$ACTUAL" ]; then
            echo "Data on S3 does not match with expectations!"
            echo ""
            echo "Got:      '$ACTUAL'"
            echo "Expected: '$EXPECTED'"
            exit 1
          fi

      - name: Wrap up step
        run: |
          buildevents step $BUILD_ID $STEP_ID $STEP_START $STEP_NAME

      - name: Build and transmit buildevent trace
        if: success()
        run: |
          buildevents build $BUILD_ID $BUILD_START success

      - name: Build and transmit buildevent trace
        if: failure()
        run: |
          buildevents build $BUILD_ID $BUILD_START failure
