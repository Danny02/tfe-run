name: Terraform Cloud Run
author: Koenraad Verheyden
description: Create and customize a run on Terraform Cloud

branding:
  icon: fast-forward
  color: purple

inputs:
  token:
    description: |
      Token used to communicating with the Terraform Cloud API. Must be a user or team api token.
    required: true
  organization:
    description: |
      Name of the organization on Terraform Cloud, defaults to the owner of the GitHub repository.
    required: false
    default: ${{ github.repository_owner }}
  workspace:
    description: >
      Name of the workspace on Terraform Cloud.
    required: true
  type:
    description: |
      The type of run, allowed options are 'plan', 'apply' and 'destroy'.
    required: false
    default: 'apply'
  targets:
    description: |
      An optional list of resource addresses to target. Should be list separated by newlines.
    required: false
    default: ''
  replacements:
    description: |
      An optional list of resource addresses to replace. Should be list separated by newlines.
    required: false
    default: ''
  wait-for-completion:
    description: |
      Whether we should wait for the plan or run to be applied. This will block until the run is finished. Defaults to true.
    required: false
    default: 'true'
  print-outputs:
    description: |
      Whether terraform outputs should be printed 
    required: false
    default: 'true'
  message:
    description: |
      Optional message to use as name of the run.
    required: false
    default: 'Queued by GitHub Actions (commit: ${{ github.sha }})'

outputs:
  run-url:
    description: URL of the run on Terraform Cloud.
  has-changes:
    description: Whether a speculative plan has changes or not.

  # tfe-run will also output all outputs from the Terraform workspace prefixed
  # with `tf-`. Since these are dynamic, they can't be listed in action.yaml.
  # For example, if a workspace has an output `endpoint`, this will exported by
  # tfe-run as `tf-endpoint`.

runs:
  using: docker
  image: Dockerfile
